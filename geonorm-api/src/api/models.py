# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-08-10T18:41:43+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, Field


class AddressRequest(BaseModel):
    address_string: str = Field(
        ...,
        description='La direcci칩n no estructurada a procesar.',
        example='carrera 4 # 10-20, apto 301, Bogota',
    )


class NormalizedStringResponse(BaseModel):
    normalizedString: str = Field(
        ..., example='Carrera 4 # 10 - 20, Apto 301, Bogot치, D.C.'
    )


class ConfidenceScoreResponse(BaseModel):
    normalizedString: str = Field(
        ..., example='Carrera 4 # 10 - 20, Apto 301, Bogot치, D.C.'
    )
    confidenceScore: float = Field(..., example=0.95)


class GeolocationResponse(BaseModel):
    normalizedString: str = Field(
        ..., example='Carrera 4 # 10 - 20, Apto 301, Bogot치, D.C.'
    )
    latitude: float = Field(..., example=4.60971)
    longitude: float = Field(..., example=-74.08175)


class Geolocation(BaseModel):
    latitude: Optional[float] = None
    longitude: Optional[float] = None


class FullValidationResponse(BaseModel):
    isValid: Optional[bool] = None
    confidenceScore: Optional[float] = None
    normalizedAddress: Optional[Dict[str, Any]] = None
    geolocation: Optional[Geolocation] = None


class ErrorResponse(BaseModel):
    errorCode: Optional[str] = None
    errorMessage: Optional[str] = None
